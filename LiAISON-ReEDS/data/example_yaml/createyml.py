#The debugger is used for finding issues with the dataframe generated by HIPSTER matcher code. 


#We find issues using the debugger and then solve them in the HIPSTER matcher code itself.

#These issues are also listed in the Github issues of our repository. HIPSTER

#Issue 1 
#Heat and power co generation is an issue. There are duplicate processess with electricity output and heat output inside ecoinvent. 

#First thing is to search for duplication production flows in an activity

import pandas as pd
import yaml
import os

with open('Mid_Case2020.yaml', 'r') as file:
    data = yaml.safe_load(file)

years = ['2022','2024','2028','2032','2036','2040','2044','2048','2050']
years = ['2022','2036','2050']
years = ['2022']
#scene=["Mid_Case","Mid_Case_100by2035","Mid_Case_95by2050"]

scen_names = os.listdir('../../../hipster_data/reeds_to_hipster_dev/ReEDS_postprocessing/Raw_ReEDS_Outputs/')

for scenario in scen_names:

    for yr in years:


           data['scenario_parameters']['updated_database'] = 'premise_base'
           data['scenario_parameters']['updated_project_name'] = 'US' + scenario + yr
           data['scenario_parameters']['lca_project_name'] = 'US' + 'lca_project_'+scenario + yr
           data['input_filenames']['creation_inventory'] = scenario+yr+'_reeds_data.csv'
           data['flags']['run_database_editor'] = True
           data['flags']['premise_editor'] = False


           print(scenario+yr)



           with open("../"+scenario+str(yr)+'.yaml', 'w') as file:
               yaml.dump(data, file)